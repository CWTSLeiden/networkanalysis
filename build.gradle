plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.palantir.git-version' version '0.12.3'
}

group = 'nl.cwts'
version = gitVersion()

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'it.unimi.dsi:fastutil:8.4.3'
    runtime 'it.unimi.dsi:fastutil:8.4.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/CWTSLeiden/networkanalysis"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "networkanalysis"
                description = "Java package that provides data structures and algorithms for network analysis."
                url = "https://github.com/CWTSLeiden/networkanalysis"
                licenses {
                    license {
                        name = "MIT License"
                        url = "http://www.opensource.org/licenses/mit-license.php"
                    }
                }
                developers {
                    developer {
                        name = "Nees Jan van Eck"
                        email = "ecknjpvan@cwts.leidenuniv.nl"
                        url = "https://github.com/neesjanvaneck"
                        id = "neesjanvaneck"
                    }
                    developer {
                        name = "Vincent Traag"
                        email = "v.a.traag@cwts.leidenuniv.nl"
                        url = "https://github.com/vtraag"
                        id = "vtraag"
                    }
                    developer {
                        name = "Ludo Waltman"
                        email = "waltmanlr@cwts.leidenuniv.nl"
                        url = "https://github.com/ludowaltman"
                        id = "ludowaltman"
                    }
                }
                scm {
                    connection = "scm:git@github.com:CWTSLeiden/networkanalysis.git"
                    developerConnection = "scm:git@github.com:CWTSLeiden/networkanalysis.git"
                    url = "https://github.com/CWTSLeiden/networkanalysis"
                }
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    def signingKey = System.getenv("GPG_SIGNING_KEY")
    def signingPassword = System.getenv("GPG_SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
